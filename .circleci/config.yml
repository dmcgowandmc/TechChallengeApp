version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.12.2
  aws-ecs: circleci/aws-ecs@1.3.0
  aws-cli: circleci/aws-cli@1.3.0

jobs:
  deploy-image:
    docker:
      - image: 'cimg/python:3.8'
    steps:
      - aws-cli/setup:
          aws-region: AWS_REGION
      - run:
          name: Setup Environment Variables
          command: |
            ECS_STACK='GTD-ECS'
            FAMILY=$(aws cloudformation describe-stacks \
              --stack-name ${ECS_STACK} \
              --query "Stacks[0].Outputs[?OutputKey=='GtdServeTaskDefinition'].OutputValue" \
              --output text | cut -d/ -f 2 | cut -d: -f 1)
            CLUSTER=$(aws cloudformation describe-stacks \
              --stack-name ${ECS_STACK} \
              --query "Stacks[0].Outputs[?OutputKey=='Cluster'].OutputValue" \
              --output text)
            SERVICE=$(aws cloudformation describe-stacks \
              --stack-name ${ECS_STACK} \
              --query "Stacks[0].Outputs[?OutputKey=='GtdService'].OutputValue" \
              --output text)
            echo "export FAMILY='${FAMILY}'" >> $BASH_ENV
            echo "export CLUSTER='${CLUSTER}'" >> $BASH_ENV
            echo "export SERVICE='${SERVICE}'" >> $BASH_ENV
      - aws-ecs/update-service:
          family: "${FAMILY}"
          cluster-name: "${CLUSTER}"
          service-name: "${SERVICE}"
          container-image-name-updates: 'container=gtd,tag=${CIRCLE_SHA1}'

workflows:
# Only build and deploy when there's a commit/merge to master
  build_and_deploy_image:
    jobs:
      - aws-ecr/build-and-push-image:
          repo: techchallengeapp
          tag: "${CIRCLE_SHA1}"
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/
      - deploy-image:
          requires:
            - aws-ecr/build-and-push-image
          filters:
            branches:
              only: master
            tags:
              ignore: /.*/
